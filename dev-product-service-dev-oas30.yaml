openapi: "3.0.1"
info:
  title: "dev-product-service"
  version: "2020-10-30T15:26:36Z"
servers:
- url: "https://dhsvydcw18.execute-api.eu-west-1.amazonaws.com/{basePath}"
  variables:
    basePath:
      default: "/dev"
paths:
  /products/{productId}:
    get:
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:771365483857:function:product-service-dev-getProductsById/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
    options:
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "#set($origin = $input.params(\"Origin\"))\n#if($origin\
                \ == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\"\
                .+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin\
                \ = $origin) #end"
        requestTemplates:
          application/json: "{statusCode:200}"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "mock"
  /products:
    get:
      description: "string"
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:771365483857:function:product-service-dev-getProductsList/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
    options:
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "#set($origin = $input.params(\"Origin\"))\n#if($origin\
                \ == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\"\
                .+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin\
                \ = $origin) #end"
        requestTemplates:
          application/json: "{statusCode:200}"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "mock"
components: {}
x-amazon-apigateway-documentation:
  version: "v.1.3"
  createdDate: "2020-10-31T09:19:39Z"
  documentationParts:
  - location:
      type: "METHOD"
      path: "/products/{productsId}"
      method: "GET"
    properties:
      products:
      - id: "string"
        title: "string"
        description: "string"
        price: "number"
  - location:
      type: "METHOD"
      path: "/products"
      method: "GET"
    properties:
      id: "string"
      title: "string"
      description: "string"
      price: "number"
