service:
  name: product-service
frameworkVersion: '2'

plugins:
  - serverless-webpack
  - serverless-jest-plugin

custom:
  ${file(../import-service/serverless.yml)}

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-1
  stage: dev
  iamRoleStatements:
    - Effect: 'Allow'
      Action: 
        - 'sqs:*'
      Resource: 
        - "${cf:import-service-${self:provider.stage}.SQSQueueArn}"
    - Effect: 'Allow'
      Action:
        - 'sns:*'
      Resource: 
        Ref: SNSTopic

  environment: 
    db_connect: ${file(/Users/alexander/Documents/Node_JS_AWS/shop-telethones-be/product-service/secret_ID)}
    SNS_ARN:
      Ref: SNSTopic

resources:
  Resources:
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: product-service-Topic
    SNCSubscription1:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: babtsoualiaksandr@gmail.com
        Protocol: email
        TopicArn: 
          Ref: SNSTopic
        FilterPolicy:
          title: 
            - Apple
    SNCSubscription2:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: abobcmail@gmail.com
        Protocol: email
        TopicArn: 
          Ref: SNSTopic
        FilterPolicy:
          title: 
            - Phone1  

functions:
  getProductsList:
    handler: getProductsList.get
    events:
    - http:
        method: get
        path: products
        cors: true
  getProductsById:
    handler: getProductsById.get
    events:
      - http:
          method: get
          path: /products/{productId}
          cors: true
          request: 
            parameters: 
              paths: 
                productId: true
  postProducts:
    handler: postProducts.post
    events:
      - http:
          method: post
          path: products
          cors: true
  catalogBatchProcess:
    handler: catalogBatchProcess.getUserFromCsv
    events:
      - sqs:
          batchSize: 5
          arn:
            - "${cf:import-service-${self:provider.stage}.SQSQueueArn}"
    